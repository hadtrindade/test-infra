---
# tasks file for freeswitch

- name: Install packages 
  ansible.builtin.apt: 
    name: "{{ packages }}"
    state: latest
    update_cache: true

- name: Download repo keypair
  ansible.builtin.get_url:
    url: https://freeswitch.signalwire.com/repo/deb/debian-release/signalwire-freeswitch-repo.gpg
    username: "{{ signalwire_user }}"
    password: "{{ signalwire_token }}"
    dest: /usr/share/keyrings/signalwire-freeswitch-repo.gpg

- name: Make apt auth directory
  ansible.builtin.file:
    path: /etc/apt/auth.conf.d
    state: directory
    mode: '0755'

- name: Create apt auth.conf.d freeswitch file
  ansible.builtin.copy:
    dest: /etc/apt/auth.conf.d/freeswitch.conf
    owner: root
    group: root
    mode: '0700'
    content: "machine freeswitch.signalwire.com login signalwire password {{ signalwire_token }}"

- name: "Add SignalWire FreeSWITCH repo"
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
    filename: freeswitch
  with_items: 
    - "deb [signed-by=/usr/share/keyrings/signalwire-freeswitch-repo.gpg] https://freeswitch.signalwire.com/repo/deb/debian-unstable/ {{ ansible_distribution_release }} main" 
    - "deb-src [signed-by=/usr/share/keyrings/signalwire-freeswitch-repo.gpg] https://freeswitch.signalwire.com/repo/deb/debian-unstable/ {{ ansible_distribution_release }} main" 

- name: Install dependencies 
  ansible.builtin.apt: 
    name: freeswitch
    state: "build-dep"
    update_cache: true

- name: Clone FreeSWITCH repo.
  ansible.builtin.git:
      repo: "{{freeswitch_repo}}"
      dest: /usr/src/freeswitch
      version: v1.10.10
      update: true

- name: Register a variable freeswitch_exists
  ansible.builtin.shell: test -e /usr/local/freeswitch/bin/freeswitch
  register: freeswitch_exists
  ignore_errors: true

- name: Build FreeSWITCH
  ansible.builtin.shell:
    cmd: ./bootstrap.sh -j && ./configure && make && make install
    chdir: /usr/src/freeswitch
  when: freeswitch_exists.rc != 0

- name: Register a variable fs_cli_exists
  ansible.builtin.shell: test -e /usr/src/freeswitch/libs/esl/fs_cli
  register: fs_cli_exists
  ignore_errors: true

- name: Build the FreeSWITCH fs_cli
  community.general.make:
    chdir: /usr/src/freeswitch/libs/esl
  when: fs_cli_exists.rc != 0

- name: Addgroup freeswitch
  ansible.builtin.group:
    name: freeswitch
    state: present

- name: Add user freeswitch in group freeswitch
  ansible.builtin.user:
    name: freeswitch
    group: freeswitch
    home: /usr/local/freeswitch
    system: true
    comment: FreeSWITCH open source softswitch
    password: '!'

- name: Set permissions in directories
  ansible.builtin.file:
    path: "{{item.dir}}"
    state: directory
    recurse: true
    owner: freeswitch
    group: freeswitch
    mode: "{{item.args}}"
  with_items: 
    - {args: ug=rwX,o=, dir: /usr/local/freeswitch/ }
    - {args: ug=rwX,o=, dir: /usr/local/freeswitch/ }
    - {args: u=rwx,g=rx, dir: /usr/local/freeswitch/bin/ }

- name: Create a symbolic link of fs_cli
  ansible.builtin.file:
    src: /usr/src/freeswitch/libs/esl/fs_cli
    dest: /usr/local/bin/fs_cli
    owner: freeswitch
    group: freeswitch
    state: link

- name: Copy systemd unit file FreeSWITCH
  ansible.builtin.copy:
    src: ../templates/freeswitch.service.j2
    dest: /etc/systemd/system/freeswitch.service
    owner: root
    group: root
    mode: '0644'

- name: Copy xml config file of sip profiles
  ansible.builtin.template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    owner: freeswitch
    group: freeswitch
  with_items: 
    - {src: ../templates/internal.xml.j2, dest: /usr/local/freeswitch/conf/sip_profiles/internal.xml }
    - {src: ../templates/external.xml.j2, dest: /usr/local/freeswitch/conf/sip_profiles/external.xml }
    - {src: ../templates/vpn.xml.j2, dest: /usr/local/freeswitch/conf/sip_profiles/vpn.xml }

- name: Enable service FreeSWITCH and state started
  ansible.builtin.service:
    name: freeswitch
    state: started
    enabled: true